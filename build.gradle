plugins {
	id 'fabric-loom' version '1.6.5'
	id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// WAITING ON:
	modImplementation "io.github.cottonmc:LibGui:11.0.0+1.21"
	// WAITING ON:
	include "io.github.cottonmc:LibGui:11.0.0+1.21"

	// When these things change, we want to recompile our mod, and others that depend on it.

	modApi "me.shedaniel.cloth:cloth-config-fabric:15.0.127"
	modApi "maven.modrinth:modmenu:11.0.0-rc.4"

	modImplementation 'maven.modrinth:continuity:3.0.0-beta.5+1.21'
	modImplementation 'maven.modrinth:sodium:mc1.21-0.5.9'
	modImplementation 'maven.modrinth:indium:1.0.33+mc1.21'

	modImplementation 'maven.modrinth:entityculling:Bu3hSiJb'
	modImplementation 'maven.modrinth:spark:1.10.73-fabric'
	modImplementation 'maven.modrinth:fabric-permissions-api:0.3.1'
	implementation "io.github.llamalad7:mixinextras-fabric:0.4.0-beta.2"
	annotationProcessor "io.github.llamalad7:mixinextras-fabric:0.4.0-beta.2"

	implementation "org.joml:joml:1.10.4"
}

processResources {
	inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaExec) {

}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

jar {
	from "LICENSE"
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		mavenLocal()
	}
}
repositories {
	mavenLocal()
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	maven {
		url = "https://api.modrinth.com/maven"
	}
	maven {
    	url = "https://server.bbkr.space/artifactory/libs-release"
	}
	maven {
		url 'https://jitpack.io'
	}
	maven {
		url 'https://oss.sonatype.org/content/repositories/snapshots/'
	}
	maven { url "https://maven.shedaniel.me/" }
    mavenCentral()
}